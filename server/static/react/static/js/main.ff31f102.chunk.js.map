{"version":3,"sources":["logo.svg","dialog.js","navbar.js","App.js","reportWebVitals.js","index.js"],"names":["URL","Newdialog","props","setOpen","st","setState","open","handleClickOpen","handleClose","handleNew","fetch","method","mode","headers","body","JSON","stringify","id","state","que","answer","ans","choices","choice1","choice2","choice3","choice4","then","r","Update","console","log","bind","handleChangeID","handleChangeC1","handleChangeC2","handleChangeC3","handleChangeC4","handleChangeQue","handleChangeAns","event","this","target","value","rel","href","Button","variant","color","onClick","className","aria-hidden","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","onChange","DialogActions","Component","DeleteDialog","handleDelete","Navbar","style","float","App","data","queCol","queRow","resCol","resRow","ansCol","ansRow","getData","a","req","json","qc","field","headerName","width","rc","ac","i","length","New","handleNewQuestion","height","rows","columns","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oRAAe,I,4FCUTA,EAAI,2CA4GJC,E,kDAEF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAaVC,QAAU,SAACC,GACP,EAAKC,SAAS,CAACC,KAAKF,KAfN,EAkBlBG,gBAAkB,WAChB,EAAKJ,SAAQ,IAnBG,EAsBlBK,YAAc,WACZ,EAAKL,SAAQ,IAvBG,EA0BlBM,UAAa,WACXC,MAAMV,EAAI,gBAAiB,CACvBW,OAAO,OACPC,KAAK,UACLC,QAAS,CACP,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACfC,GAAI,EAAKC,MAAMD,GACfE,IAAK,EAAKD,MAAMC,IAChBC,OAAQ,EAAKF,MAAMG,IACnBC,QAAQ,CAAC,EAAKJ,MAAMK,QAAQ,EAAKL,MAAMM,QAAQ,EAAKN,MAAMO,QAAQ,EAAKP,MAAMQ,aAGlFC,MAAM,SAAAC,GAAM,EAAKpB,cAAc,EAAKN,MAAM2B,YAE7CC,QAAQC,IAAI,EAAKb,QAxCf,EAAKA,MAAQ,CAACZ,MAAK,EAAOW,GAAG,GAAIE,IAAI,GAAII,QAAQ,GAAIC,QAAQ,GAAIC,QAAQ,GAAGC,QAAQ,GAAIL,IAAI,IAC5F,EAAKd,gBAAkB,EAAKA,gBAAgByB,KAArB,gBACvB,EAAKxB,YAAc,EAAKA,YAAYwB,KAAjB,gBACnB,EAAK7B,QAAU,EAAKA,QAAQ6B,KAAb,gBACf,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,eAAiB,EAAKA,eAAeH,KAApB,gBACtB,EAAKI,eAAiB,EAAKA,eAAeJ,KAApB,gBACtB,EAAKK,eAAiB,EAAKA,eAAeL,KAApB,gBACtB,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBACvB,EAAKO,gBAAkB,EAAKA,gBAAgBP,KAArB,gBAZT,E,kDA6ClB,SAAeQ,GAEXC,KAAKpC,SAAS,CAACY,GAAIuB,EAAME,OAAOC,U,6BAGpC,SAAgBH,GAEZC,KAAKpC,SAAS,CAACc,IAAKqB,EAAME,OAAOC,U,4BAGrC,SAAeH,GAEXC,KAAKpC,SAAS,CAACkB,QAASiB,EAAME,OAAOC,U,4BAGzC,SAAeH,GAEXC,KAAKpC,SAAS,CAACmB,QAASgB,EAAME,OAAOC,U,4BAGzC,SAAeH,GAEXC,KAAKpC,SAAS,CAACoB,QAASe,EAAME,OAAOC,U,4BAGzC,SAAeH,GAEXC,KAAKpC,SAAS,CAACqB,QAASc,EAAME,OAAOC,U,6BAGzC,SAAgBH,GAEZC,KAAKpC,SAAS,CAACgB,IAAKmB,EAAME,OAAOC,U,oBAGvC,WACE,OACE,gCACE,sBAAMC,IAAI,aAAaC,KAAK,uFAE5B,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,QAASR,KAAKlC,gBAAzD,SACA,mBAAG2C,UAAU,oBAAoBC,cAAY,WAE7C,eAACC,EAAA,EAAD,CAAQ9C,KAAMmC,KAAKvB,MAAMZ,KAAM+C,QAASZ,KAAKjC,YAAa8C,kBAAgB,oBAA1E,UACE,cAACC,EAAA,EAAD,CAAatC,GAAG,oBAAhB,0BACA,eAACuC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,iCAGA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACP3C,GAAG,KACH4C,MAAM,KACNC,KAAK,OACLC,WAAS,EACTpB,MAAOF,KAAKvB,MAAMD,GAClB+C,SAAUvB,KAAKR,iBAEjB,cAACyB,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACP3C,GAAG,MACH4C,MAAM,gBACNC,KAAK,OACLC,WAAS,EACTpB,MAAOF,KAAKvB,MAAMC,IAClB6C,SAAUvB,KAAKH,kBAEjB,cAACoB,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACP3C,GAAG,UACH4C,MAAM,WACNC,KAAK,OACLC,WAAS,EACTpB,MAAOF,KAAKvB,MAAMK,QAClByC,SAAUvB,KAAKP,iBAEnB,cAACwB,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,QACP3C,GAAG,UACH4C,MAAM,WACNC,KAAK,OACLC,WAAS,EACTpB,MAAOF,KAAKvB,MAAMM,QAClBwC,SAAUvB,KAAKN,iBAElB,cAACuB,EAAA,EAAD,CACGC,WAAS,EACTC,OAAO,QACP3C,GAAG,UACH4C,MAAM,WACNC,KAAK,OACLC,WAAS,EACTpB,MAAOF,KAAKvB,MAAMO,QAClBuC,SAAUvB,KAAKL,iBAGnB,cAACsB,EAAA,EAAD,CACIC,WAAS,EACTC,OAAO,QACP3C,GAAG,UACH4C,MAAM,WACNC,KAAK,OACLC,WAAS,EACTpB,MAAOF,KAAKvB,MAAMQ,QAClBsC,SAAUvB,KAAKJ,iBAEjB,cAACqB,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACP3C,GAAG,MACH4C,MAAM,SACNC,KAAK,OACLC,WAAS,EACTpB,MAAOF,KAAKvB,MAAMG,IAClB2C,SAAUvB,KAAKF,qBAGnB,eAAC0B,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAQG,QAASR,KAAKjC,YAAawC,MAAM,UAAzC,oBAGA,eAACF,EAAA,EAAD,CAAQG,QAASR,KAAKhC,UAAWuC,MAAM,UAAvC,oBACO,mBAAGE,UAAU,oBAAoBC,cAAY,yB,GA7KxCe,aAqLhBC,E,kDAEJ,WAAYjE,GAAO,IAAD,8BACd,cAAMA,IASVC,QAAU,SAACC,GACP,EAAKC,SAAS,CAACC,KAAKF,KAXN,EAclBG,gBAAkB,WAChB,EAAKJ,SAAQ,IAfG,EAkBlBK,YAAc,WACZ,EAAKL,SAAQ,IAnBG,EAuBlBiE,aAAe,WACX1D,MAAMV,EAAI,mBAAoB,CAC1BW,OAAO,OACPC,KAAK,UACLC,QAAS,CACP,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACfC,GAAI,EAAKC,MAAMD,OAGpBU,MAAM,SAAAC,GAAM,EAAKpB,cAAc,EAAKN,MAAM2B,aAhC7C,EAAKX,MAAQ,CAACZ,MAAK,EAAOW,GAAG,GAAIE,IAAI,GAAII,QAAQ,GAAIC,QAAQ,GAAIC,QAAQ,GAAGC,QAAQ,GAAIL,IAAI,IAC5F,EAAKd,gBAAkB,EAAKA,gBAAgByB,KAArB,gBACvB,EAAKxB,YAAc,EAAKA,YAAYwB,KAAjB,gBACnB,EAAK7B,QAAU,EAAKA,QAAQ6B,KAAb,gBACf,EAAKoC,aAAe,EAAKA,aAAapC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBAPR,E,kDAsClB,SAAeQ,GAEXC,KAAKpC,SAAS,CAACY,GAAIuB,EAAME,OAAOC,U,oBAGtC,WACE,OACE,gCACE,sBAAMC,IAAI,aAAaC,KAAK,uFAE5B,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,QAASR,KAAKlC,gBAAzD,SACA,mBAAG2C,UAAU,cAAcC,cAAY,WAEvC,eAACC,EAAA,EAAD,CAAQ9C,KAAMmC,KAAKvB,MAAMZ,KAAM+C,QAASZ,KAAKjC,YAAa8C,kBAAgB,oBAA1E,UACE,cAACC,EAAA,EAAD,CAAatC,GAAG,oBAAhB,0BACA,eAACuC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,gCAGA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACP3C,GAAG,KACH4C,MAAM,KACNC,KAAK,OACLC,WAAS,EACTpB,MAAOF,KAAKvB,MAAMD,GAClB+C,SAAUvB,KAAKR,oBAGnB,eAACgC,EAAA,EAAD,WACE,cAACnB,EAAA,EAAD,CAAQG,QAASR,KAAKjC,YAAawC,MAAM,UAAzC,oBAGA,eAACF,EAAA,EAAD,CAAQG,QAASR,KAAK2B,aAAcpB,MAAM,UAA1C,oBACO,mBAAGE,UAAU,cAAcC,cAAY,yB,GA3E7Be,aCtRdG,E,4JAhBX,WACI,OACJ,sBAAKnB,UAAU,SAAf,UAEA,mBAAGA,UAAU,SAASL,KAAK,IAA3B,wBACA,mBAAGK,UAAU,SAASoB,MAAO,CAAEC,MAAO,SAAW1B,KAAK,2CAAtD,uBACA,mBAAGK,UAAU,SAASoB,MAAO,CAAEC,MAAO,SAAtC,SACA,cAAC,EAAD,CAAW1C,OAAQY,KAAKvC,MAAM2B,WAE9B,mBAAGqB,UAAU,SAASoB,MAAO,CAAEC,MAAO,SAAtC,SACA,cAAC,EAAD,CAAc1C,OAAQY,KAAKvC,MAAM2B,kB,GAXhBqC,aC2FNM,E,kDApFb,WAAYtE,GACX,IAAD,8BACE,cAAMA,IACDgB,MAAQ,CAACuD,KAAM,GAAIC,OAAQ,GAAIC,OAAO,GAAIC,OAAO,GAAIC,OAAQ,GAAIC,OAAO,GAAIC,OAAO,IACxF,EAAKC,QAAU,EAAKA,QAAQhD,KAAb,gBAHjB,E,kFAMA,sCAAAiD,EAAA,sEAEoBvE,MAAMV,sDAAoB,CAC1CW,OAAO,MACPC,KAAK,YAJT,cAEQsE,EAFR,gBAMmBA,EAAIC,OANvB,OA4BE,IAtBIV,EANN,OAOQW,EAAK,CACT,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAO,IACxC,CAAEF,MAAO,MAAOC,WAAY,WAAYC,MAAO,KAC/C,CAAEF,MAAO,UAAWC,WAAY,UAAWC,MAAO,MAI9CC,EAAI,CAER,CAAEH,MAAO,YAAaC,WAAY,YAAaC,MAAO,KACtD,CAAEF,MAAO,OAAQC,WAAY,OAAQC,MAAO,KAC5C,CAAEF,MAAO,QAASC,WAAY,QAASC,MAAO,KAC9C,CAAEF,MAAO,YAAaC,WAAY,YAAaC,MAAO,KACtD,CAAEF,MAAO,YAAaC,WAAY,YAAaC,MAAO,KACtD,CAAEF,MAAO,KAAMC,WAAY,KAAMC,MAAO,MAGpCE,EAAK,CACT,CAAEJ,MAAO,KAAMC,WAAY,KAAMC,MAAO,KACxC,CAAEF,MAAO,SAAUC,WAAY,SAAUC,MAAO,MAE1CG,EAAE,EAAIA,EAAIjB,EAAI,UAAckB,OAAOD,IAEzCjB,EAAI,UAAciB,GAAlB,UAAoC3E,KAAKC,UAAUyD,EAAI,UAAciB,GAAlB,WA9BvD,OAiCEjD,KAAKpC,SAAS,CAACoE,KAAMA,EACnBC,OAAOU,EAAIT,OAAQF,EAAI,UACvBG,OAAOY,EAAIX,OAAQJ,EAAI,UACvBK,OAAOW,EAAIV,OAAQN,EAAI,UApC3B,kBAsCS,GAtCT,iD,sFA4CA,WACEhC,KAAKuC,Y,oBAGP,WACE,OAEE,gCACA,cAAC,EAAD,CAAQnD,OAAQY,KAAKuC,QAASY,IAAKnD,KAAKoD,oBAIxC,8CAIA,2CACA,qBAAKvB,MAAO,CAAEwB,OAAQ,IAAKP,MAAO,QAAlC,SACE,cAAC,IAAD,CAAUQ,KAAMtD,KAAKvB,MAAMyD,OAAQqB,QAASvD,KAAKvB,MAAMwD,WAEzD,yCACA,qBAAKJ,MAAO,CAAEwB,OAAQ,IAAKP,MAAO,QAAlC,SACE,cAAC,IAAD,CAAUQ,KAAMtD,KAAKvB,MAAM6D,OAAQiB,QAASvD,KAAKvB,MAAM4D,WAEzD,2CACA,qBAAKR,MAAO,CAAEwB,OAAQ,IAAKP,MAAO,QAAlC,SACE,cAAC,IAAD,CAAUQ,KAAMtD,KAAKvB,MAAM2D,OAAQmB,QAASvD,KAAKvB,MAAM0D,kB,GA9E7CV,aCEH+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxE,MAAK,YAAkD,IAA/CyE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.ff31f102.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useState, Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n// const URL=\"http://localhost:5000\"\nconst URL=\"https://texam.projects.harshsinghvi.com/\"\n\n\n// export default function Newdialog() {\n//   const [open, setOpen] = React.useState(false);\n//   var id = 0;\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n//   const handleClose = () => {\n//     setOpen(false);\n//   };\n\n//   const  handleNew = async () =>{\n//     // data\n//     // r = fetch(URL+'/new-question', {\n//     //     body:\"\"\n//     // })\n//     await handleClose()\n//     console.log(open)\n//     console.log(id)\n//   } \n//   handleChange(event){\n//     id = event.target.value\n//   }\n\n\n//   return (\n//     <div>\n//       <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n\n//       <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n//       <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n//       </Button>\n//       <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n//         <DialogTitle id=\"form-dialog-title\">New Question</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Enter The Details.\n//           </DialogContentText>\n//           <TextField\n//             value={id}\n//             onChange={handleChange}\n//             autoFocus\n//             margin=\"dense\"\n//             id=\"que\"\n//             label=\"Question Text\"\n//             type=\"text\"\n//             fullWidth\n//           />\n//           <TextField\n//             autoFocus\n//             margin=\"dense\"\n//             id=\"choice1\"\n//             label=\"Choice 1\"\n//             type=\"text\"\n//             fullWidth\n//           />\n//         <TextField\n//             autoFocus\n//             margin=\"dense\"\n//             id=\"choice2\"\n//             label=\"Choice 2\"\n//             type=\"text\"\n//             fullWidth\n//           />\n//          <TextField\n//             autoFocus\n//             margin=\"dense\"\n//             id=\"choice3\"\n//             label=\"Choice 3\"\n//             type=\"text\"\n//             fullWidth\n//           />\n\n//         <TextField\n//             autoFocus\n//             margin=\"dense\"\n//             id=\"choice4\"\n//             label=\"Choice 4\"\n//             type=\"text\"\n//             fullWidth\n//           />\n//           <TextField\n//             autoFocus\n//             margin=\"dense\"\n//             id=\"ans\"\n//             label=\"Answer\"\n//             type=\"text\"\n//             fullWidth\n//           />\n//         </DialogContent>\n//         <DialogActions>\n//           <Button onClick={handleClose} color=\"primary\">\n//             Cancel\n//           </Button>\n//           <Button onClick={handleNew} color=\"primary\">\n//           Create <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n//           </Button>\n//         </DialogActions>\n//       </Dialog>\n//     </div>\n//   );\n// }\n\n\nclass Newdialog extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {open:false, id:'', que:'', choice1:'', choice2:'', choice3:'',choice4:'', ans:''}\n        this.handleClickOpen = this.handleClickOpen.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.setOpen = this.setOpen.bind(this)\n        this.handleChangeID = this.handleChangeID.bind(this)\n        this.handleChangeC1 = this.handleChangeC1.bind(this)\n        this.handleChangeC2 = this.handleChangeC2.bind(this)\n        this.handleChangeC3 = this.handleChangeC3.bind(this)\n        this.handleChangeC4 = this.handleChangeC4.bind(this)\n        this.handleChangeQue = this.handleChangeQue.bind(this)\n        this.handleChangeAns = this.handleChangeAns.bind(this)\n    }\n    setOpen = (st) => {\n        this.setState({open:st})\n    }\n\n    handleClickOpen = () => {\n      this.setOpen(true);\n    };\n  \n    handleClose = () => {\n      this.setOpen(false);\n    };\n  \n    handleNew =  () =>{\n      fetch(URL+'/new-question', {\n          method:'POST',\n          mode:'no-cors',\n          headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n              id: this.state.id,\n              que: this.state.que,\n              answer: this.state.ans,\n              choices:[this.state.choice1,this.state.choice2,this.state.choice3,this.state.choice4]\n          })\n        // body: JSON.stringify(this.state)\n      }).then( r => {this.handleClose();this.props.Update() })\n    \n      console.log(this.state)\n    }\n\n    handleChangeID(event)\n    {\n        this.setState({id: event.target.value});\n    }\n\n    handleChangeQue(event)\n    {\n        this.setState({que: event.target.value});\n    }\n  \n    handleChangeC1(event)\n    {\n        this.setState({choice1: event.target.value});\n    }\n  \n    handleChangeC2(event)\n    {\n        this.setState({choice2: event.target.value});\n    }\n  \n    handleChangeC3(event)\n    {\n        this.setState({choice3: event.target.value});\n    }\n\n    handleChangeC4(event)\n    {\n        this.setState({choice4: event.target.value});\n    }\n\n    handleChangeAns(event)\n    {\n        this.setState({ans: event.target.value});\n    }\n\n  render(){\n    return (\n      <div>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n  \n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n        <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n        </Button>\n        <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">New Question</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Enter The Details.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"id\"\n              label=\"ID\"\n              type=\"text\"\n              fullWidth\n              value={this.state.id}\n              onChange={this.handleChangeID}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"que\"\n              label=\"Question Text\"\n              type=\"text\"\n              fullWidth\n              value={this.state.que}\n              onChange={this.handleChangeQue}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"choice1\"\n              label=\"Choice 1\"\n              type=\"text\"\n              fullWidth\n              value={this.state.choice1}\n              onChange={this.handleChangeC1}\n            />\n          <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"choice2\"\n              label=\"Choice 2\"\n              type=\"text\"\n              fullWidth\n              value={this.state.choice2}\n              onChange={this.handleChangeC2}\n            />\n           <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"choice3\"\n              label=\"Choice 3\"\n              type=\"text\"\n              fullWidth\n              value={this.state.choice3}\n              onChange={this.handleChangeC3}\n            />\n  \n          <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"choice4\"\n              label=\"Choice 4\"\n              type=\"text\"\n              fullWidth\n              value={this.state.choice4}\n              onChange={this.handleChangeC4}\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"ans\"\n              label=\"Answer\"\n              type=\"text\"\n              fullWidth\n              value={this.state.ans}\n              onChange={this.handleChangeAns}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleNew} color=\"primary\">\n            Create <i className=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );}\n  }\n\n  class DeleteDialog extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {open:false, id:'', que:'', choice1:'', choice2:'', choice3:'',choice4:'', ans:''}\n        this.handleClickOpen = this.handleClickOpen.bind(this)\n        this.handleClose = this.handleClose.bind(this)\n        this.setOpen = this.setOpen.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n        this.handleChangeID = this.handleChangeID.bind(this)\n\n    }\n    setOpen = (st) => {\n        this.setState({open:st})\n    }\n\n    handleClickOpen = () => {\n      this.setOpen(true);\n    };\n  \n    handleClose = () => {\n      this.setOpen(false);\n    };\n  \n\n    handleDelete = () => {\n        fetch(URL+'/delete-question', {\n            method:'POST',\n            mode:'no-cors',\n            headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n                id: this.state.id,\n            })\n          // body: JSON.stringify(this.state)\n        }).then( r => {this.handleClose();this.props.Update() })\n\n    }\n\n    handleChangeID(event)\n    {\n        this.setState({id: event.target.value});\n    }\n\n  render(){\n    return (\n      <div>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" />\n  \n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n        <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n        </Button>\n        <Dialog open={this.state.open} onClose={this.handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">New Question</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Enter Question ID\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"id\"\n              label=\"ID\"\n              type=\"text\"\n              fullWidth\n              value={this.state.id}\n              onChange={this.handleChangeID}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleDelete} color=\"primary\">\n            Delete <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );}\n  }\n\nexport {Newdialog}\nexport {DeleteDialog}","import { Component } from 'react';\nimport './navbar.css'\nimport {Newdialog,DeleteDialog} from './dialog'\n\nclass Navbar extends Component{\n    render(){\n        return( \n    <div className=\"topnav\">\n\n    <a className=\"active\" href=\"/\">Exam Admin</a>\n    <a className=\"active\" style={{ float: 'right' }} href='https://texam.projects.harshsinghvi.com/'> Results </a>\n    <a className=\"active\" style={{ float: 'right' }} > \n    <Newdialog Update={this.props.Update} />\n    </a>\n    <a className=\"active\" style={{ float: 'right' }} > \n    <DeleteDialog Update={this.props.Update} />\n    </a>\n    </div>\n    )}\n}\n\nexport default Navbar;","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport Navbar from './navbar'\n\n// const URL=\"http://localhost:5000\"\nconst URL=\"https://texam.projects.harshsinghvi.com/\"\n\n\nclass App extends Component{\n  constructor(props)\n  {\n    super(props)\n    this.state = {data: {}, queCol: [], queRow:[], resCol:[], resRow: [], ansCol:[], ansRow:[]}\n    this.getData = this.getData.bind(this)\n  }\n\n  async getData()\n  {\n    const req = await fetch(URL + '/admin-data',{\n      method:'GET',\n      mode:'no-cors'\n  })\n    var data = await req.json()\n    const qc = [\n      { field: 'id', headerName: 'ID', width: 70 },\n      { field: 'que', headerName: 'Question', width: 800 },\n      { field: 'choices', headerName: 'Choices', width: 500 }\n      // { field: 'answer', headerName: 'answer', width: 70 }\n    ]\n\n    const rc =[\n\n      { field: 'timestamp', headerName: 'Timestamp', width: 300 },\n      { field: 'name', headerName: 'Name', width: 130 },\n      { field: 'email', headerName: 'Email', width: 250 },\n      { field: 'responses', headerName: 'Responses', width: 600 },\n      { field: 'penalties', headerName: 'Penalties', width: 150 },\n      { field: 'id', headerName: 'ID', width: 250 }\n    ]\n\n    const ac = [\n      { field: 'id', headerName: 'ID', width: 130 },\n      { field: 'answer', headerName: 'Answer', width: 250 }\n    ]\n    for(var i=0 ; i < data['responses'].length;i++)\n    {\n      data['responses'][i]['responses'] = JSON.stringify(data['responses'][i]['responses'])\n    }\n\n    this.setState({data: data, \n      queCol:qc, queRow: data['questions'],\n      resCol:rc, resRow: data['responses'],\n      ansCol:ac, ansRow: data['answers']\n    });\n    return 0\n  }\n\n  // componentDidMount(){\n  //   this.getData()\n  // }\n  componentWillMount(){\n    this.getData();\n  }\n\n  render(){\n    return(\n      \n      <div>\n      <Navbar Update={this.getData} New={this.handleNewQuestion} />\n      {/* <Navbar New={this.handleNewQuestion} /> */}\n\n      {/* <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\" /> */}\n      <h1>TEXAM Portal</h1>\n      {/* <button onClick={handleButton} value/> */}\n      {/* <p> {this.state.columns} </p> */}\n      {/* <br/> */}\n      <h2>Questions</h2>\n      <div style={{ height: 450, width: '100%' }}>\n        <DataGrid rows={this.state.queRow} columns={this.state.queCol} />\n      </div>\n      <h2>Answers</h2>\n      <div style={{ height: 450, width: '100%' }}>\n        <DataGrid rows={this.state.ansRow} columns={this.state.ansCol} />\n      </div>\n      <h2>Responses</h2>\n      <div style={{ height: 600, width: '100%' }}>\n        <DataGrid rows={this.state.resRow} columns={this.state.resCol} />\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}